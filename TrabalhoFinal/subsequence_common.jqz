<?xml version="1.0" encoding="ISO-8859-1"?>

<hotpot-jquiz-file>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <rdf:Description rdf:about="">
    <dc:creator>vitordullens</dc:creator>
    <dc:title>Longest Common Subsequence</dc:title>
  </rdf:Description>
</rdf:RDF><version>6</version>

<data>
<title>Longest Common Subsequence</title>

<timer><seconds>60</seconds><include-timer>0</include-timer></timer>

<reading>
<include-reading>0</include-reading>
<reading-title></reading-title>
<reading-text></reading-text>

</reading>

<questions><question-record><question>O que &amp;#x00E9; uma subsequ&amp;#x00EA;ncia comum quando se trata de strings?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Dada duas strings, encontrar uma subsequencia presente em ambas.</text><feedback>Correto, &amp;#x00E9; exatamente a defini&amp;#x00E7;&amp;#x00E3;o do algoritmo.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Dada duas strings, comparar se ambas s&amp;#x00E3;o iguais.</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Dada duas strings, verificar se ambas s&amp;#x00E3;o pal&amp;#x00ED;ndromo.</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Verificar em uma string duas subsequencias iguais.</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Dada duas strings:
A: abcdaf
B: acbcf

Qual &amp;#x00E9; a maior subsequencia comum entre elas?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>abcf</text><feedback>Correto.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>acbf</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>accf</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>abaf</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Qual a ideia por tr&amp;#x00E1;s do algoritmo de encontrar a maior subsequ&amp;#x00EA;ncia comum entre duas strings? (lendo a string da esquerda para a direita)</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Verifica se o caracter de ambas as strings &amp;#x00E9; o mesmo, se sim, soma 1 no valor e executa a fun&amp;#x00E7;&amp;#x00E3;o para o proximo tamanho. Se os caracteres forem diferentes verifica qual o maior tamanho encontrado entre as strings e continua.</text><feedback>Correto, essa &amp;#x00E9; ideia por tr&amp;#x00E1;s do algoritmo.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Verificar se as strings s&amp;#x00E3;o iguais.</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Verificar se as strings s&amp;#x00E3;o pal&amp;#x00ED;ndromo.</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Percorrer a string de tr&amp;#x00E1;s para a frente, contando o n&amp;#x00FA;mero de caracteres que ela possui.</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Tendo em vista o algorimo abaixo, responda:

int max(int a, int b); 

int lcs( char *X, char *Y, int m, int n ) { 	
              if (m == 0 || n == 0) 
		return 0; 
	if (X[m-1] == Y[n-1]) 
		return 1 + lcs(X, Y, m-1, n-1); 
	else
		return max(lcs(X, Y, m, n-1), lcs(X, Y, m-1, n)); 
} 

int max(int a, int b) { 
	return (a &amp;#x003E; b)? a : b; 
} 

Qual a complexidade deste algortimo?
</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>O(2^n)</text><feedback>Correto!</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(n)</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(n^2)</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(n!)</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Tendo em vista o algorimo abaixo, responda:

int max(int a, int b); 

int lcs( char *X, char *Y, int m, int n ) { 	
              if (m == 0 || n == 0) 
		return 0; 
	if (X[m-1] == Y[n-1]) 
		return 1 + lcs(X, Y, m-1, n-1); 
	else
		return max(lcs(X, Y, m, n-1), lcs(X, Y, m-1, n)); 
} 

int max(int a, int b) { 
	return (a &amp;#x003E; b)? a : b; 
} 

Qual a t&amp;#x00E9;cnica por tr&amp;#x00E1;s deste algortimo?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Recursividade</text><feedback>Correto!</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Programa&amp;#x00E7;&amp;#x00E3;o Dinamica</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Programa&amp;#x00E7;&amp;#x00E3;o Funcional</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Programa&amp;#x00E7;&amp;#x00E3;o Orientada a Objetos</text><feedback>Errado</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Tendo em vista o algorimo abaixo, responda:

int max(int a, int b); 

int lcs( char *X, char *Y, int m, int n ) 
{ 
	int L[m + 1][n + 1]; 
	int i, j; 
	
	for (i = 0; i &amp;#x003C;= m; i++) 
	{ 
		for (j = 0; j &amp;#x003C;= n; j++) 
		{ 
		if (i == 0 || j == 0) 
			L[i][j] = 0; 
	
		else if (X[i - 1] == Y[j - 1]) 
			L[i][j] = L[i - 1][j - 1] + 1; 
	
		else
			L[i][j] = max(L[i - 1][j], L[i][j - 1]); 
		} 
	} 

	return L[m][n]; 
} 

int max(int a, int b) 
{ 
	return (a &amp;#x003E; b)? a : b; 
} 


Qual a complexidade deste algortimo?
</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>O(m*n)</text><feedback>Correto. &amp;#x00C9; a multiplica&amp;#x00E7;&amp;#x00E3;o entre os tamanhos de ambas as strings</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(n*logn)</text><feedback>Errado</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(n!)</text><feedback>Errado</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>O(2^n)</text><feedback>Errado</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Tendo em vista o algorimo abaixo, responda:

int max(int a, int b); 

int lcs( char *X, char *Y, int m, int n ) 
{ 
	int L[m + 1][n + 1]; 
	int i, j; 
	
	for (i = 0; i &amp;#x003C;= m; i++) 
	{ 
		for (j = 0; j &amp;#x003C;= n; j++) 
		{ 
		if (i == 0 || j == 0) 
			L[i][j] = 0; 
	
		else if (X[i - 1] == Y[j - 1]) 
			L[i][j] = L[i - 1][j - 1] + 1; 
	
		else
			L[i][j] = max(L[i - 1][j], L[i][j - 1]); 
		} 
	} 

	return L[m][n]; 
} 

int max(int a, int b) 
{ 
	return (a &amp;#x003E; b)? a : b; 
} 

Qual a t&amp;#x00E9;cnica por tr&amp;#x00E1;s deste algortimo?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Recursividade</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Programa&amp;#x00E7;&amp;#x00E3;o Din&amp;#x00E2;mica</text><feedback>Correto.</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Programa&amp;#x00E7;&amp;#x00E3;o Funcional</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Programa&amp;#x00E7;&amp;#x00E3;o Orientada a Objetos</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Por que este algoritmo &amp;#x00E9; beneficiado pela programa&amp;#x00E7;&amp;#x00E3;o din&amp;#x00E2;mica?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>Pois os resultados v&amp;#x00E3;o sendo armazenados, n&amp;#x00E3;o precisando ser recalculados posteriormente.</text><feedback>Correto!</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Pois existe menor uso de mem&amp;#x00F3;ria.</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Pois n&amp;#x00E3;o existe recursividade, que &amp;#x00E9; um jeito primitivo existente em algoritmos</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>Nenhuma das anteriores</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Dada duas strings:
A: aaaaabbbb
B: aabb

Qual &amp;#x00E9; a maior subsequencia comum entre elas?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>aabb</text><feedback>Correto!</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>a</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>aa</text><feedback>Errado!</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>aab</text><feedback>Errado</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record><question-record><question>Dada duas strings:
A: AGGTAB
B: GXTXAYB

Qual &amp;#x00E9; o comprimento da maior subsequencia comum entre elas?</question><clue></clue><category></category><weighting>100</weighting><fixed>0</fixed><question-type>1</question-type><answers><answer><text>4</text><feedback>Correto, a subsequencia &amp;#x00E9; GTAB</feedback><correct>1</correct><percent-correct>100</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>3</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>2</text><feedback>Errado,</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer><answer><text>5</text><feedback>Errado.</feedback><correct>0</correct><percent-correct>0</percent-correct><include-in-mc-options>1</include-in-mc-options></answer></answers></question-record></questions>
</data>

<hotpot-config-file>
<jquiz>
<exercise-subtitle>Quiz</exercise-subtitle>
<instructions></instructions>
<guess-correct>Correct!</guess-correct>
<guess-incorrect>Sorry! Try again.</guess-incorrect>
<partly-incorrect>Your answer is partly wrong: </partly-incorrect>
<enter-a-guess>Please enter a guess.</enter-a-guess>
<next-correct-letter>Next correct letter in the answer: </next-correct-letter>
<correct-answers>Correct answers: </correct-answers>
<show-answer-caption>Show answer</show-answer-caption>
<include-hint>1</include-hint>
<include-show-answer>1</include-show-answer>
<next-ex-url>nextpage.htm</next-ex-url>
<send-email>0</send-email>
<continuous-scoring>1</continuous-scoring>
<show-correct-first-time>1</show-correct-first-time>
<shuffle-questions>0</shuffle-questions>
<shuffle-answers>0</shuffle-answers>
<show-limited-questions>0</show-limited-questions>
<questions-to-show>2</questions-to-show>
<short-answer-tries-on-hybrid-q>2</short-answer-tries-on-hybrid-q>
<separate-javascript-file>0</separate-javascript-file>
<case-sensitive>0</case-sensitive>
<include-keypad>0</include-keypad>
</jquiz>

<global>
<your-score-is>Your score is </your-score-is>
<correct-indicator>:-)</correct-indicator>
<incorrect-indicator>X</incorrect-indicator>
<correct-first-time>Questions answered correctly first time: </correct-first-time>
<completed-so-far>Questions completed so far: </completed-so-far>
<exercise-completed>You have completed the exercise.</exercise-completed>
<keypad-characters></keypad-characters>
<times-up>Your time is over!</times-up>
<next-ex-caption>=&amp;#x003E;</next-ex-caption>
<back-caption>&amp;#x003C;=</back-caption>
<contents-caption>Index</contents-caption>
<include-next-ex>1</include-next-ex>
<include-contents>1</include-contents>
<include-back>0</include-back>
<contents-url>contents.htm</contents-url>
<graphic-url></graphic-url>
<font-face>Geneva,Arial,sans-serif</font-face>
<font-size>small</font-size>
<page-bg-color>#C0C0C0</page-bg-color>
<title-color>#000000</title-color>
<ex-bg-color>#FFFFFF</ex-bg-color>
<text-color>#000000</text-color>
<link-color>#0000FF</link-color>
<vlink-color>#0000CC</vlink-color>
<nav-bar-color>#000000</nav-bar-color>
<formmail-url>http://yourserver.com/cgi-bin/FormMail.pl</formmail-url>
<email>you@yourserver.com</email>
<name-please>Please enter your name:</name-please>
<user-string-1>one</user-string-1>
<user-string-2>two</user-string-2>
<user-string-3>three</user-string-3>
<header-code></header-code>
<correct-first-time>Questions answered correctly first time: </correct-first-time>
<check-caption>Check</check-caption>
<ok-caption>OK</ok-caption>
<next-q-caption>=&amp;#x003E;</next-q-caption>
<last-q-caption>&amp;#x003C;=</last-q-caption>
<hint-caption>Hint</hint-caption>
<show-all-questions-caption>Show all questions</show-all-questions-caption>
<show-one-by-one-caption>Show questions one by one</show-one-by-one-caption>
<show-also-correct>1</show-also-correct>
<process-for-rtl>0</process-for-rtl>
<include-scorm-12>0</include-scorm-12>
</global>
</hotpot-config-file>
</hotpot-jquiz-file>
